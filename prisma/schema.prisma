generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  password      String
  role          Role      @default(USER)
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Brand {
  id        String    @id @default(uuid())
  name      String
  slug      String    @unique
  image     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  // RELATION 
  product   Product[]
}

// RECURSIVITY
model Category {
  id        String     @id @default(uuid())
  name      String
  slug      String     @unique
  image     String?
  parentId  String?
  children  Category[] @relation("ParentCategory")
  parent    Category?  @relation("ParentCategory", fields: [parentId], references: [id])
  products  Product[]  @relation("ProductCategory")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Warranty {
  id          String    @id @default(uuid())
  code        String    @unique
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  // RELATION
  product     Product[]
}

model Supplier {
  id        String    @id @default(uuid())
  name      String
  seller    String
  email     String[]
  telephone String[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  // RELATION
  product   Product[]
}

model Product {
  id    String   @id @default(uuid())
  slug  String   @unique
  name  String
  model String
  tags  String[] @default([])

  front  Int @default(0)
  depth  Int @default(0)
  height Int @default(0)
  weight Int @default(0)

  ProductImage ProductImage[]

  // ONE TO ONE  
  brand      Brand    @relation(fields: [brandId], references: [id])
  brandId    String
  supplier   Supplier @relation(fields: [supplierId], references: [id])
  supplierId String
  warranty   Warranty @relation(fields: [warrantyId], references: [id])
  warrantyId String
  // MANY TO ONE
  category   Category @relation("ProductCategory", fields: [categoryId], references: [id])
  categoryId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  url       String
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?
}

model Blog {
  id          String   @id @default(uuid())
  name        String
  slug        String   @unique
  image       String
  description String
  content     String
  tags        String[] @default([])
  category    String[] @default([])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}